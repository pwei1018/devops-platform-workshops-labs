apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: prometheus-template
message: |-
  The following service(s) have been created in your project: ${PROMETHEUS_SERVICE_NAME}.
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app: ${PROMETHEUS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${PROMETHEUS_SERVICE_NAME}
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${PROMETHEUS_SERVICE_NAME}
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          name: ${PROMETHEUS_SERVICE_NAME}-pwei1018-prometheus-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: ${PROMETHEUS_SERVICE_NAME}-pwei1018-prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: ${PROMETHEUS_SERVICE_NAME}
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: ${PROMETHEUS_SERVICE_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    host: prometheus-s4g19x-pwei1018-openshift201-may2019-dev.pathfinder.gov.bc.ca
    port:
      targetPort: http
    to:
      kind: Service
      name: ${PROMETHEUS_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    alerts: |
      {}
    prometheus.yml: |
      global:
        evaluation_interval: 1m
        scrape_interval: 1m
        scrape_timeout: 10s
      rule_files:
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: ${PROMETHEUS_SERVICE_NAME}
        static_configs:
        - targets:
          - localhost:9090
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - s4g19x-pwei1018-openshift201-may2019-dev
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
    rules: |
      {}
  kind: ConfigMap
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
parameters:
- description: The name of the OpenShift Service exposed for the database.
  displayname: Prometheus Service Name
  name: PROMETHEUS_SERVICE_NAME
  required: true
  value: pwei1018-prometheus
